version: "3.9"

services:
  postgres:
    image: postgis/postgis:14-3.2
    container_name: disfactory-postgres-test
    environment:
      POSTGRES_DB: disfactory_test
      POSTGRES_USER: disfactory_user
      POSTGRES_PASSWORD: disfactory_pass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: disfactory-backend-test
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        cd /Disfactory &&
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        echo 'Backend setup complete' &&
        sleep 5 &&
        echo 'Backend exiting for test'
      "
    environment:
      # Database
      DISFACTORY_BACKEND_DEFAULT_DB_HOST: postgres
      DISFACTORY_BACKEND_DEFAULT_DB_PORT: 5432
      DISFACTORY_BACKEND_DEFAULT_DB_NAME: disfactory_test
      DISFACTORY_BACKEND_DEFAULT_DB_USER: disfactory_user
      DISFACTORY_BACKEND_DEFAULT_DB_PASSWORD: disfactory_pass
      
      # General settings
      DISFACTORY_BACKEND_DEBUG: "false"
      DISFACTORY_ALLOWED_HOST: "*"
      DISFACTORY_BACKEND_CORS_ORIGIN_WHITELIST: ""
      DISFACTORY_BACKEND_MAX_FACTORY_PER_GET: "50"
      DISFACTORY_BACKEND_MAX_FACTORY_RADIUS_PER_GET: "10"
      DISFACTORY_BACKEND_LOG_LEVEL: "INFO"
      DISFACTORY_BACKEND_LOG_FILE: "/tmp/disfactory.log"
      DISFACTORY_BACKEND_MEDIA_ROOT: "./images/"
      DISFACTORY_BACKEND_DOMAIN: "http://localhost:8000"
      DISFACTORY_FRONTEND_DOMAIN: "https://disfactory.tw/"
      PORT: "8000"
      
      # Mock secrets for testing
      GOOGLE_MAP_API_KEY: "test_api_key"
      DISFACTORY_IMGUR_CLIENT_ID: "test_imgur_id"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: disfactory-worker-test
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_completed_successfully
    command: >
      sh -c "
        cd /Disfactory &&
        echo 'Worker starting...' &&
        python -c 'import django; django.setup(); from django_q.models import OrmQ; print(\"Django Q tables accessible:\", OrmQ.objects.count() >= 0)' &&
        echo 'Worker test complete'
      "
    environment:
      # Database
      DISFACTORY_BACKEND_DEFAULT_DB_HOST: postgres
      DISFACTORY_BACKEND_DEFAULT_DB_PORT: 5432
      DISFACTORY_BACKEND_DEFAULT_DB_NAME: disfactory_test
      DISFACTORY_BACKEND_DEFAULT_DB_USER: disfactory_user
      DISFACTORY_BACKEND_DEFAULT_DB_PASSWORD: disfactory_pass
      
      # General settings
      DISFACTORY_BACKEND_DEBUG: "false"
      DISFACTORY_ALLOWED_HOST: "*"
      DISFACTORY_BACKEND_LOG_LEVEL: "INFO"
      
      # Mock secrets for testing
      GOOGLE_MAP_API_KEY: "test_api_key"