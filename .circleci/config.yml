ref:
  frontend_docker_default: &frontend_docker_default
    docker:
      - image: circleci/node:lts
    working_directory: ~/Disfactory
  backend_docker_default: &backend_docker_default
    docker:
      - image: circleci/python:3.7.5
      - image: circleci/postgres:11-alpine-postgis-ram
        name: db
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: disfactory_data
    working_directory: ~/Disfactory/backend
    environment:
      WORKON_HOME: ~/Disfactory/backend/.venv
      PIPENV_VENV_IN_PROJECT: true

version: 2
jobs:
  frontend-lint:
    <<: *frontend_docker_default
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "frontend/package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: cd frontend && npm ci
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}

      - run: cd frontend && npm run lint
  frontend-build:
    <<: *frontend_docker_default
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "frontend/package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: cd frontend && npm ci
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}

      - run: cd frontend && npm run build
      - persist_to_workspace:
          root: frontend
          paths:
            - dist
  frontend-deploy:
    <<: *frontend_docker_default
    steps:
      - checkout
      - attach_workspace:
          at: frontend
      - run:
          name: Install and configure dependencies
          command: |
            npm install --silent gh-pages
            git config user.email "ci-build@disfactory.tw"
            git config user.name "ci-build"
            echo "dev.disfactory.tw" > frontend/dist/CNAME
      - add_ssh_keys:
          fingerprints:
            - "15:64:e1:a2:bf:d0:8e:4b:4f:f1:22:2d:62:18:1b:ad"
      - run:
          name: Deploy docs to gh-pages branch
          command: npx gh-pages --dist frontend/dist
  backend-all:
    <<: *backend_docker_default
    steps:
      - checkout:
         path: ~/Disfactory
      - restore_cache:
          keys:
            - disfactory-backend-cache-191118-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - disfactory-backend-cache-191118-{{ .Branch }}
      - run:
          name: Install
          command: pipenv install --dev
      - run:
          name: Install GDAL
          command: |
            sudo apt-get update
            sudo apt-get install -y gdal-bin python3-gdal
      - run:
          name: Setup .env
          command: cp .env.sample .env
      # - run:
      #     name: Run Linter
      #     command: make lint
      # TODO: fuck you black. Use flake8 or pylint instead
      - run:
          name: Unittest
          command: pipenv run make unittest
      - save_cache:
          paths:
            - ".venv"
          key: disfactory-backend-cache-191118-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

workflows:
  version: 2
  build:
    jobs:
      - frontend-lint
      - frontend-build
      - frontend-deploy:
          requires:
            - frontend-lint
            - frontend-build
          filters:
            branches:
              only: master
      - backend-all